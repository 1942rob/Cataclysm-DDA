# this file is HEAVILY influenced by https://github.com/boostorg/hana/blob/master/.travis.yml

dist: xenial
services:
  - xvfb
language: c++

cache: ccache

notifications:
  email: false

git:
  depth: 5

addons:
  # these apt sources will be referenced later (by using *name)
  apt:
    sources: &apt_sources
      - ubuntu-toolchain-r-test
    config:
      retries: true

compiler: gcc
os: linux

# We have branch builds disabled globally to prevent double-builds of PRs.
# This re-enables just the master branch.
branches:
  only:
  - master
  - development

# Overall strategy for what sorts of builds to include:
# We want a build for each compiler and each platform.
# For PRs, we lessen the "each compiler" requirement to just covering the newest
# and oldest relevant version of each compiler.
# We also want to ensure that each of the following tweaks are covered in at
# least one PR build:
# - TILES=1
# - SOUND=1
# - RELEASE=1
# - CMAKE=1
# - LOCALIZE=0
# - Tests with important mods enabled (Magiclysm)
# We try to minimize the number of builds subject to those constraints.
#
# The following used to be here but became too slow to run on Travis and have
# been moved to GitHub Actions:
# - A clang-tidy run
# - SANITIZE=address,undefined

# To see what toolchains are available, consult the following:
# https://github.com/travis-ci/apt-source-safelist/blob/master/ubuntu.json
# https://launchpad.net/%7Eubuntu-toolchain-r/+archive/ubuntu/test/+index

jobs:
  include:
    # Initial test stage, if this fails everything else is canceled.
    - stage: Test
    # MXE variant using alternate repository http://mirror.mxe.cc/repos/apt
      env: COMPILER=g++ LDFLAGS="-static-libgcc -static-libstdc++" MXE_TARGET="i686-w64-mingw32.static" WINE="wine" TILES=1 SOUND=1
      name: "Mingw-w64 Make cross-compile to Windows with Tiles and Sound"
      compiler: gcc
      addons: &gcc
        apt:
          packages: ["wine"]

before_script:
  - if [ -n "${CLANG}" ]; then COMPILER="$CLANG"; fi
  - ${COMPILER} --version
  - CXX="$COMPILER"
  - source build-scripts/requirements.sh

script:
  - build-scripts/build.sh

after_success:
  - if [ -n "${CODE_COVERAGE}" ]; then coveralls -b . -i src -e tests --gcov /usr/bin/gcov-6; fi
  - if [ -n "${CODE_COVERAGE}" ]; then bash <(curl -s https://codecov.io/bash); fi
